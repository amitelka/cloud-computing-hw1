AWSTemplateFormatVersion: '2010-09-09'
Description: Parking Lot Management System - EC2 Deployment with Docker

Parameters:
  Stage:
    Type: String
    Description: Deployment stage
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of a EC2 KeyPair to enable SSH access to the instance
  InstanceType:
    Type: String
    Description: EC2 instance type
    AllowedValues: [t2.micro, t2.small, t2.medium]
  SSHLocation:
    Type: String
    Description: The IP address range that can be used to SSH to the EC2 instances
  DockerImage:
    Type: String
    Description: Docker image to deploy

Resources:
  ParkingTicketsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: parking-tickets
      AttributeDefinitions:
        - AttributeName: ticket_id
          AttributeType: S
        - AttributeName: license_plate
          AttributeType: S
      KeySchema:
        - AttributeName: ticket_id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

      GlobalSecondaryIndexes:
        - IndexName: license_plate-index
          KeySchema:
            - AttributeName: license_plate
              KeyType: HASH
          Projection:
            ProjectionType: ALL

  ParkingLotSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH and HTTP access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SSHLocation
        - IpProtocol: tcp
          FromPort: 8000
          ToPort: 8000
          CidrIp: 0.0.0.0/0

  ParkingLotInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ParkingTableCrud
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:CreateTable
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:Query
                  - dynamodb:DescribeTable
                Resource:
                  - !GetAtt ParkingTicketsTable.Arn
                  - !Sub "${ParkingTicketsTable.Arn}/index/*"

  ParkingLotInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref ParkingLotInstanceRole

  ParkingLotInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      SecurityGroups:
        - !Ref ParkingLotSecurityGroup
      KeyName: !Ref KeyName
      ImageId: ami-06dd92ecc74fdfb36  # Ubuntu 22.04 LTS
      IamInstanceProfile: !Ref ParkingLotInstanceProfile
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1

          # Install Docker
          apt-get update -y
          sudo apt-get install docker.io -y
          systemctl start docker
          systemctl enable docker

          # Install AWS CLI for DynamoDB access
          apt-get install -y awscli
          aws configure set region ${AWS::Region}

          # Pull and run the Docker container
          echo "Pulling Docker image ${DockerImage}..."
          docker pull ${DockerImage}

          # Create a systemd service for the container
          cat > /etc/systemd/system/parking-lot-docker.service << 'EOF'
          [Unit]
          Description=Parking Lot Management System Docker Container
          After=docker.service
          Requires=docker.service

          [Service]
          Restart=always
          ExecStartPre=-/usr/bin/docker stop parking-lot
          ExecStartPre=-/usr/bin/docker rm parking-lot
          ExecStart=/usr/bin/docker run --name parking-lot \
            -p 8000:8000 \
            -e AWS_REGION=${AWS::Region} \
            -e DYNAMODB_TABLE=${ParkingTicketsTable} \
            ${DockerImage}
          ExecStop=/usr/bin/docker stop parking-lot

          [Install]
          WantedBy=multi-user.target
          EOF

          # Start the service
          systemctl daemon-reload
          systemctl enable parking-lot-docker
          systemctl start parking-lot-docker

Outputs:
  ParkingLotInstanceIP:
    Description: Public IP address of the EC2 instance
    Value: !GetAtt ParkingLotInstance.PublicIp
  ParkingLotInstanceId:
    Description: Instance ID of the EC2 instance
    Value: !Ref ParkingLotInstance
  ParkingTicketsTable:
    Description: DynamoDB Table Name
    Value: !Ref ParkingTicketsTable
  WebsiteURL:
    Description: URL for the Parking Lot Management System
    Value: !Sub http://${ParkingLotInstance.PublicIp}:8000
